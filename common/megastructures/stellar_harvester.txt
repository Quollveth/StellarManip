stellar_mass_harvester_0 = {
	#the one the event spawns, automatically upgrades to the proper class
	entity = "stellar_mass_harvester_entity_0"
	construction_entity = "cracker_ring1_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = no
	potential = {
		always = no
	}
	possible = {
		always = no
	}
	on_build_complete = { #checks the star class and spawns the proper base (i copied this from Gigas, idk how it works or why there's so many froms)
		fromfrom.planet = { set_planet_flag = has_megastructure }	
		if = {		limit = { fromfrom.planet = { is_planet_class = pc_b_star } }		spawn_megastructure = { type = "stellar_mass_harvester_b_0"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
		else_if = {	limit = { fromfrom.planet = { is_planet_class = pc_m_giant_star } }	spawn_megastructure = { type = "stellar_mass_harvester_m_giant_0"	owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
		else_if = {	limit = { fromfrom.planet = { is_planet_class = pc_a_star } }		spawn_megastructure = { type = "stellar_mass_harvester_a_0"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
		else_if = {	limit = { fromfrom.planet = { is_planet_class = pc_f_star } }		spawn_megastructure = { type = "stellar_mass_harvester_f_0"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
		else_if = {	limit = { fromfrom.planet = { is_planet_class = pc_g_star } }		spawn_megastructure = { type = "stellar_mass_harvester_g_0"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
		else_if = {	limit = { fromfrom.planet = { is_planet_class = pc_k_star } }		spawn_megastructure = { type = "stellar_mass_harvester_k_0"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
		else_if = {	limit = { fromfrom.planet = { is_planet_class = pc_m_star } }		spawn_megastructure = { type = "stellar_mass_harvester_m_0"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
		else_if = {	limit = { fromfrom.planet = { is_planet_class = pc_giga_o_star } }	spawn_megastructure = { type = "stellar_mass_harvester_o_0"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
	}
}

##############################################################
#####################auto upgrading bases#####################
##############################################################

stellar_mass_harvester_o_0 = {
	entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = no
	build_time = 0
	upgrade_from = {
		stellar_mass_harvester_0
	}

	on_build_complete = {
		space_owner = {
			every_owned_megastructure = {
				limit = {
					is_megastructure_type = stellar_mass_harvester_o_0
				}
				upgrade_megastructure_to = stellar_mass_harvester_o_1
			}
		}
	}
}
stellar_mass_harvester_b_0 = {
	entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = no
	build_time = 0
	upgrade_from = {
		stellar_mass_harvester_0
	}

	on_build_complete = {
		space_owner = {
			every_owned_megastructure = {
				limit = {
					is_megastructure_type = stellar_mass_harvester_b_0
				}
				upgrade_megastructure_to = stellar_mass_harvester_b_1
			}
		}
	}
}
stellar_mass_harvester_m_giant_0 = {
	entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = no
	build_time = 0
	upgrade_from = {
		stellar_mass_harvester_0
	}

	on_build_complete = {
		space_owner = {
			every_owned_megastructure = {
				limit = {
					is_megastructure_type = stellar_mass_harvester_m_giant_0
				}
				upgrade_megastructure_to = stellar_mass_harvester_m_giant_1
			}
		}
	}
}
stellar_mass_harvester_a_0 = {
	entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = no
	build_time = 0
	upgrade_from = {
		stellar_mass_harvester_0
	}

	on_build_complete = {
		space_owner = {
			every_owned_megastructure = {
				limit = {
					is_megastructure_type = stellar_mass_harvester_a_0
				}
				upgrade_megastructure_to = stellar_mass_harvester_a_1
			}
		}
	}
}
stellar_mass_harvester_f_0 = {
	entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = no
	build_time = 0
	upgrade_from = {
		stellar_mass_harvester_0
	}

	on_build_complete = {
		space_owner = {
			every_owned_megastructure = {
				limit = {
					is_megastructure_type = stellar_mass_harvester_f_0
				}
				upgrade_megastructure_to = stellar_mass_harvester_f_1
			}
		}
	}
}
stellar_mass_harvester_g_0 = {
	entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = no
	build_time = 0
	upgrade_from = {
		stellar_mass_harvester_0
	}

	on_build_complete = {
		space_owner = {
			every_owned_megastructure = {
				limit = {
					is_megastructure_type = stellar_mass_harvester_g_0
				}
				upgrade_megastructure_to = stellar_mass_harvester_g_1
			}
		}
	}
}
stellar_mass_harvester_k_0 = {
	entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = no
	build_time = 0
	upgrade_from = {
		stellar_mass_harvester_0
	}

	on_build_complete = {
		space_owner = {
			every_owned_megastructure = {
				limit = {
					is_megastructure_type = stellar_mass_harvester_k_0
				}
				upgrade_megastructure_to = stellar_mass_harvester_k_1
			}
		}
	}
}
stellar_mass_harvester_m_0 = {
	entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = no
	build_time = 0
	upgrade_from = {
		stellar_mass_harvester_0
	}

	on_build_complete = {
		space_owner = {
			every_owned_megastructure = {
				limit = {
					is_megastructure_type = stellar_mass_harvester_m_0
				}
				upgrade_megastructure_to = stellar_mass_harvester_m_1
			}
		}
	}
}


######################################################
#####################actual megas#####################
######################################################

stellar_mass_harvester_o_1 = {
	entity = "stellar_mass_harvester_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = yes
	upgrade_from = {
		stellar_mass_harvester_o_0
	}
	build_time = 3000
	possible = {
		from = {
			has_technology = tech_stellar_manip_harvester
		}
	}
	resources = {
		category = megastructures
		upkeep = {
			energy = 1750
		}
		produces = {
			sr_stellar_plasma = @harvester_produces_plasma_o_star
		}
	}
	on_build_complete = {
		space_owner = {
			every_controlled_planet = {
				limit = {
					is_star = yes
					has_planet_flag = harvesting_star
				}
				planet_event = { id = star_manip.101 }
			}
		}
	}
}

stellar_mass_harvester_b_1 = {
	entity = "stellar_mass_harvester_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = yes
	upgrade_from = {
		stellar_mass_harvester_b_0
	}
	build_time = 1350
	possible = {
		from = {
			has_technology = tech_stellar_manip_harvester
		}
	}
	resources = {
		category = megastructures
		upkeep = {
			energy = 875
		}
		produces = {
			sr_stellar_plasma = @harvester_produces_plasma_b_star
		}
	}
	on_build_complete = {
		space_owner = {
			every_controlled_planet = {
				limit = {
					is_star = yes
					has_planet_flag = harvesting_star
				}
				planet_event = { id = star_manip.101 }
			}
		}
	}
}

stellar_mass_harvester_m_giant_1 = {
	entity = "stellar_mass_harvester_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = yes
	upgrade_from = {
		stellar_mass_harvester_m_giant_0
	}
	build_time = 1200
	possible = {
		from = {
			has_technology = tech_stellar_manip_harvester
		}
	}
	resources = {
		category = megastructures
		upkeep = {
			energy = 700
		}
		produces = {
			sr_stellar_plasma = @harvester_produces_plasma_m_giant_star
		}
	}
	on_build_complete = {
		space_owner = {
			every_controlled_planet = {
				limit = {
					is_star = yes
					has_planet_flag = harvesting_star
				}
				planet_event = { id = star_manip.101 }
			}
		}
	}
}

stellar_mass_harvester_a_1 = {
	entity = "stellar_mass_harvester_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = yes
	upgrade_from = {
		stellar_mass_harvester_a_0
	}
	build_time = 900
	possible = {
		from = {
			has_technology = tech_stellar_manip_harvester
		}
	}
	resources = {
		category = megastructures
		upkeep = {
			energy = 525
		}
		produces = {
			sr_stellar_plasma = @harvester_produces_plasma_a_star
		}
	}
	on_build_complete = {
		space_owner = {
			every_controlled_planet = {
				limit = {
					is_star = yes
					has_planet_flag = harvesting_star
				}
				planet_event = { id = star_manip.101 }
			}
		}
	}
}

stellar_mass_harvester_f_1 = {
	entity = "stellar_mass_harvester_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = yes
	upgrade_from = {
		stellar_mass_harvester_f_0
	}
	build_time = 750
	possible = {
		from = {
			has_technology = tech_stellar_manip_harvester
		}
	}
	resources = {
		category = megastructures
		upkeep = {
			energy = 437
		}
		produces = {
			sr_stellar_plasma = @harvester_produces_plasma_f_star
		}
	}
	on_build_complete = {
		space_owner = {
			every_controlled_planet = {
				limit = {
					is_star = yes
					has_planet_flag = harvesting_star
				}
				planet_event = { id = star_manip.101 }
			}
		}
	}
}

stellar_mass_harvester_g_1 = {
	entity = "stellar_mass_harvester_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = yes
	upgrade_from = {
		stellar_mass_harvester_g_0
	}
	build_time = 600
	possible = {
		from = {
			has_technology = tech_stellar_manip_harvester
		}
	}
	resources = {
		category = megastructures
		upkeep = {
			energy = 350
		}
		produces = {
			sr_stellar_plasma = @harvester_produces_plasma_g_star
		}
	}
	on_build_complete = {
		space_owner = {
			every_controlled_planet = {
				limit = {
					is_star = yes
					has_planet_flag = harvesting_star
				}
				planet_event = { id = star_manip.101 }
			}
		}
	}
}

stellar_mass_harvester_k_1 = {
	entity = "stellar_mass_harvester_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = yes
	upgrade_from = {
		stellar_mass_harvester_k_0
	}
	build_time = 450
	possible = {
		from = {
			has_technology = tech_stellar_manip_harvester
		}
	}
	resources = {
		category = megastructures
		upkeep = {
			energy = 262
		}
		produces = {
			sr_stellar_plasma = @harvester_produces_plasma_k_star
		}
	}
	on_build_complete = {
		space_owner = {
			every_controlled_planet = {
				limit = {
					is_star = yes
					has_planet_flag = harvesting_star
				}
				planet_event = { id = star_manip.101 }
			}
		}
	}
}

stellar_mass_harvester_m_1 = {
	entity = "stellar_mass_harvester_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = {always = no}
	place_entity_on_planet_plane = yes
	upgrade_from = {
		stellar_mass_harvester_m_0
	}
	build_time = 300
	possible = {
		from = {
			has_technology = tech_stellar_manip_harvester
		}
	}
	resources = {
		category = megastructures
		upkeep = {
			energy = 175
		}
		produces = {
			sr_stellar_plasma = @harvester_produces_plasma_m_star
		}
	}
	on_build_complete = {
		space_owner = {
			every_controlled_planet = {
				limit = {
					is_star = yes
					has_planet_flag = harvesting_star
				}
				planet_event = { id = star_manip.101 }
			}
		}
	}
}